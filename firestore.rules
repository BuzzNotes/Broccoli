rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow authenticated users to read and write their own data
    match /users/{userId} {
      // Allow read and write if the user is authenticated and the userId matches their UID
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Allow creation of new user documents for authenticated users
      allow create: if request.auth != null;
      
      // Allow admins to read all user data
      // Uncomment and configure this when you have admin functionality
      // function isAdmin() {
      //   return request.auth != null && 
      //     exists(/databases/$(database)/documents/admins/$(request.auth.uid));
      // }
      
      // Validate user data on creation and update
      match /collections/{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Posts collection rules
    match /posts/{postId} {
      // Anyone can read posts
      allow read: if true;
      
      // Only authenticated users can create posts
      allow create: if request.auth != null;
      
      // Only the author can update or delete their posts
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Comments collection rules
    match /comments/{commentId} {
      // Anyone can read comments
      allow read: if true;
      
      // Only authenticated users can create comments
      allow create: if request.auth != null;
      
      // Only the author can update or delete their comments
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Default rule - deny all other access
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
  }
} 